from aiogram.types import Update, Message as TgMessage
from dtos.message_dto import Message
import re


def parse_update_to_message_dto(update: Update) -> Message:
    """–ü–∞—Ä—Å–∏—Ç –æ–±—ä–µ–∫—Ç Update –≤ DTO Message —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    print("üõ†Ô∏è –ù–∞—á–∞–ª–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ Update –≤ DTO")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∞–ø–¥–µ–π—Ç–µ
    if not update.message:
        print("‚ùå Update –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è")
        raise ValueError("Update does not contain a message")

    message = update.message

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    group_id = str(message.chat.id) if message.chat else "unknown"
    user_id = str(message.from_user.id) if message.from_user else "unknown"

    print(f"üîç –ü–∞—Ä—Å–∏–Ω–≥ —Å–æ–æ–±—â–µ–Ω–∏—è: chat_id={group_id}, user_id={user_id}")

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    text = message.text or message.caption or ""
    print(f"üìù –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: {text[:50]}{'...' if len(text) > 50 else ''}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ–¥–∏–∞
    has_img = bool(message.photo)
    has_video = bool(message.video)
    has_audio = bool(message.audio or message.voice)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Å—ã–ª–æ–∫ –≤ —Ç–µ–∫—Å—Ç–µ
    has_link = bool(re.search(r'https?://\S+', text))

    print(f"üì∏ –ú–µ–¥–∏–∞-–¥–∞–Ω–Ω—ã–µ: img={has_img}, video={has_video}, audio={has_audio}")
    print(f"üîó –°—Å—ã–ª–∫–∏: {has_link}")

    return Message(
        group_id=group_id,
        user_id=user_id,
        text=text,
        has_img=has_img,
        has_video=has_video,
        has_audio=has_audio,
        has_link=has_link
    )


def parse_message_to_dto(message: TgMessage) -> Message:
    """–ü–∞—Ä—Å–∏—Ç –æ–±—ä–µ–∫—Ç Message –≤ DTO —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    print("üõ†Ô∏è –ù–∞—á–∞–ª–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ Message –≤ DTO")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if not message:
        print("‚ùå –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        raise ValueError("Message object is missing")

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    group_id = str(message.chat.id) if message.chat else "unknown"
    user_id = str(message.from_user.id) if message.from_user else "unknown"

    print(f"üîç –ü–∞—Ä—Å–∏–Ω–≥ —Å–æ–æ–±—â–µ–Ω–∏—è: chat_id={group_id}, user_id={user_id}")

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (—É—á–∏—Ç—ã–≤–∞–µ–º caption –¥–ª—è –º–µ–¥–∏–∞)
    text = ""
    if message.text:
        text = message.text
    elif message.caption:
        text = message.caption

    print(f"üìù –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: {text[:50]}{'...' if len(text) > 50 else ''}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ–¥–∏–∞
    has_img = bool(message.photo)
    has_video = bool(message.video or message.video_note)
    has_audio = bool(message.audio or message.voice or message.document)

    # –î–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º MIME-—Ç–∏–ø
    if message.document:
        mime_type = message.document.mime_type or ""
        if 'audio' in mime_type:
            has_audio = True
        elif 'image' in mime_type:
            has_img = True
        elif 'video' in mime_type:
            has_video = True

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Å—ã–ª–æ–∫ –≤ —Ç–µ–∫—Å—Ç–µ
    has_link = bool(re.search(r'https?://\S+', text)) if text else False

    print(f"üì∏ –ú–µ–¥–∏–∞-–¥–∞–Ω–Ω—ã–µ: img={has_img}, video={has_video}, audio={has_audio}")
    print(f"üîó –°—Å—ã–ª–∫–∏: {has_link}")

    # –°–æ–∑–¥–∞–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º DTO –æ–±—ä–µ–∫—Ç
    return Message(
        group_id=group_id,
        user_id=user_id,
        text=text,
        has_img=has_img,
        has_video=has_video,
        has_audio=has_audio,
        has_link=has_link
    )