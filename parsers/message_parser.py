from aiogram.types import Update, Message as TgMessage
from dtos.message_dto import Message
import re


def parse_update_to_message_dto(update: Update) -> Message:
    """–ü–∞—Ä—Å–∏—Ç –æ–±—ä–µ–∫—Ç Update –≤ DTO Message —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    print("üõ†Ô∏è –ù–∞—á–∞–ª–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ Update –≤ DTO")

    if not update.message:
        print("‚ùå Update –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è")
        raise ValueError("Update does not contain a message")

    message = update.message
    return parse_message_to_dto(message)


def parse_message_to_dto(message: TgMessage) -> Message:
    """–ü–∞—Ä—Å–∏—Ç –æ–±—ä–µ–∫—Ç Message –≤ DTO —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    print("üõ†Ô∏è –ù–∞—á–∞–ª–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ Message –≤ DTO")

    if not message:
        print("‚ùå –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        raise ValueError("Message object is missing")

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    group_id = str(message.chat.id) if message.chat else "unknown"
    user_id = str(message.from_user.id) if message.from_user else "unknown"

    print(f"üîç –ü–∞—Ä—Å–∏–Ω–≥ —Å–æ–æ–±—â–µ–Ω–∏—è: chat_id={group_id}, user_id={user_id}")

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    text = message.text or message.caption or ""
    print(f"üìù –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: {text[:50]}{'...' if len(text) > 50 else ''}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ–¥–∏–∞ (–æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–µ –ø–æ–ª–µ)
    has_photo = bool(message.photo)
    has_video = bool(message.video or message.video_note)
    has_audio = bool(message.audio or message.voice)
    has_document = bool(message.document)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞
    is_document_media = False
    if message.document:
        mime_type = message.document.mime_type or ""
        is_document_media = any(x in mime_type for x in ['image', 'video', 'audio'])

    media_attachment = has_photo or has_video or has_audio or has_document or is_document_media

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Ç–∏–∫–µ—Ä–æ–≤/GIF
    sticker_or_gif_present = bool(message.sticker) or bool(message.animation)

    # –°—á–∏—Ç–∞–µ–º —Å–∫—Ä—ã—Ç—ã–µ —Å—Å—ã–ª–∫–∏ (text_link)
    hidden_url_count = 0
    entities = message.entities or message.caption_entities or []

    for entity in entities:
        if entity.type == "text_link":
            hidden_url_count += 1
            print(f"üîó –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–∫—Ä—ã—Ç–∞—è —Å—Å—ã–ª–∫–∞: {entity.url}")

    print(f"üì∏ –ú–µ–¥–∏–∞-–≤–ª–æ–∂–µ–Ω–∏–µ: {media_attachment}")
    print(f"üé≠ –°—Ç–∏–∫–µ—Ä/GIF: {sticker_or_gif_present}")
    print(f"üîó –°–∫—Ä—ã—Ç—ã—Ö —Å—Å—ã–ª–æ–∫: {hidden_url_count}")

    return Message(
        group_id=group_id,
        user_id=user_id,
        text=text,
        hidden_url_count=hidden_url_count,
        media_attachment=media_attachment,
        sticker_or_gif_present=sticker_or_gif_present
    )