import json
import aiohttp
from dtos.message_dto import Message
from aiogram.types import Message as TgMessage


async def send_message_to_service(message_dto: Message, original_message: TgMessage) -> int:
    """–û—Ç–ø—Ä–∞–≤–∫–∞ DTO –Ω–∞ —Å–µ—Ä–≤–∏—Å –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞"""
    print("\n" + "=" * 50)
    print("üöÄ –ù–ê–ß–ê–õ–û –û–¢–ü–†–ê–í–ö–ò DTO")
    print(f"üÜî Group ID: {message_dto.group_id}")
    print(f"üë§ User ID: {message_dto.user_id}")
    print(f"üìù Text: {message_dto.text[:50]}{'...' if len(message_dto.text) > 50 else ''}")
    print(f"üîó Hidden URLs: {message_dto.hidden_url_count}")
    print(f"üì∏ Media Attachment: {message_dto.media_attachment}")
    print(f"üé≠ Sticker/GIF: {message_dto.sticker_or_gif_present}")

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DTO –≤ JSON —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
    dto_dict = {
        "user_id": message_dto.user_id,
        "group_id": message_dto.group_id,
        "text": message_dto.text,
        "hiddenUrlCount": message_dto.hidden_url_count,
        "mediaAttachment": message_dto.media_attachment,
        "stickerOrGifPresent": message_dto.sticker_or_gif_present
    }

    print("üì¶ DTO –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:")
    print(json.dumps(dto_dict, indent=2, ensure_ascii=False))

    spam_flag = 0  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –Ω–µ —Å–ø–∞–º

    try:
        async with aiohttp.ClientSession() as session:
            async with session.post(
                    "http://192.168.52.48:9002/bot/check",
                    json=dto_dict,
                    headers={"Content-Type": "application/json"},
                    timeout=2.0
            ) as response:

                if response.status == 200:
                    result = await response.json()
                    spam_flag = result.get('spam', 0)
                    print(f"üîÑ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: spam = {spam_flag}")

                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                    if spam_flag == 2:  # –°–ø–∞–º
                        await original_message.delete()
                        print("üö´ –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∫–∞–∫ —Å–ø–∞–º")
                    elif spam_flag == 1:  # –ü–æ–¥–æ–∑—Ä–µ–Ω–∏–µ
                        await original_message.reply("‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–≥–ª—è–¥–∏—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ!")
                        print("‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
                else:
                    print(f"‚õî –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {response.status}")
    except Exception as e:
        print(f"üî• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {str(e)}")

    print("‚úÖ –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
    print("=" * 50 + "\n")
    return spam_flag